(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{465:function(e,t,n){"use strict";n.r(t);var a=n(56),c=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"_13-8-复选框"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_13-8-复选框"}},[e._v("#")]),e._v(" 13.8 复选框")]),e._v(" "),n("p",[e._v("复选框提供一个制造单一选择开关的方法；它包括一个小框和一个标签。典型的复选框有一个小的"),n("code",[e._v("X")]),e._v("（或者它设置的其它类型）或是空的，这依靠项目是否被选择来决定的。")]),e._v(" "),n("p",[e._v("我们会使用构造器正常地创建一个复选框，使用它的标签来充当它的参数。如果我们在创建复选框后想读出或改变它，我们能够获取和设置它的状态，同样也能获取和设置它的标签。注意，复选框的大写是与其它的控制相矛盾的。")]),e._v(" "),n("p",[e._v("无论何时一个复选框都可以设置和清除一个事件指令，我们可以捕捉同样的方法做一个按钮。在下面的例子里使用一个文字区域枚举所有被选中的复选框：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('//: CheckBox1.java\n// Using check boxes\nimport java.awt.*;\nimport java.applet.*;\n\npublic class CheckBox1 extends Applet {\n  TextArea t = new TextArea(6, 20);\n  Checkbox cb1 = new Checkbox("Check Box 1");\n  Checkbox cb2 = new Checkbox("Check Box 2");\n  Checkbox cb3 = new Checkbox("Check Box 3");\n  public void init() {\n    add(t); add(cb1); add(cb2); add(cb3);\n  }\n  public boolean action (Event evt, Object arg) {\n    if(evt.target.equals(cb1))\n      trace("1", cb1.getState());\n    else if(evt.target.equals(cb2))\n      trace("2", cb2.getState());\n    else if(evt.target.equals(cb3))\n      trace("3", cb3.getState());\n    else\n      return super.action(evt, arg);\n    return true;\n  }\n  void trace(String b, boolean state) {\n    if(state)\n      t.appendText("Box " + b + " Set\\n");\n    else\n      t.appendText("Box " + b + " Cleared\\n");\n  }\n} ///:~\n')])])]),n("p",[n("code",[e._v("trace()")]),e._v("方法将选中的复选框名和当前状态用"),n("code",[e._v("appendText()")]),e._v("发送到文字区域中去，所以我们看到一个累积的被选中的复选框和它们的状态的列表。")])])}),[],!1,null,null,null);t.default=c.exports}}]);