(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{447:function(t,e,n){"use strict";n.r(e);var i=n(56),a=Object(i.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_13-10-下拉列表"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_13-10-下拉列表"}},[t._v("#")]),t._v(" 13.10 下拉列表")]),t._v(" "),n("p",[t._v("下拉列表像一个单选钮组，它是强制用户从一组可实现的选择中选择一个对象的方法。而且，它是一个实现这点的相当简洁的方法，也最易改变选择而不至使用户感到吃力（我们可以动态地改变单选钮，但那种方法显然不方便）。Java的选择框不像Windows中的组合框可以让我从列表中选择或输入自己的选择。在一个选择框中你只能从列表中选择仅仅一个项目。在下面的例子里，选择框从一个确定输入的数字开始，然后当按下一个按钮时，新输入的数字增加到框里。你将可以看到选择框的一些有趣的状态：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('//: Choice1.java\n// Using drop-down lists\nimport java.awt.*;\nimport java.applet.*;\n\npublic class Choice1 extends Applet {\n  String[] description = { "Ebullient", "Obtuse",\n    "Recalcitrant", "Brilliant", "Somnescent",\n    "Timorous", "Florid", "Putrescent" };\n  TextField t = new TextField(30);\n  Choice c = new Choice();\n  Button b = new Button("Add items");\n  int count = 0;\n  public void init() {\n    t.setEditable(false);\n    for(int i = 0; i < 4; i++)\n      c.addItem(description[count++]);\n    add(t);\n    add(c);\n    add(b);\n  }\n  public boolean action (Event evt, Object arg) {\n    if(evt.target.equals(c))\n      t.setText("index: " +  c.getSelectedIndex()\n        + "   " + (String)arg);\n    else if(evt.target.equals(b)) {\n      if(count < description.length)\n        c.addItem(description[count++]);\n    }\n    else\n      return super.action(evt, arg);\n    return true;\n  }\n} ///:~\n')])])]),n("p",[t._v("文本字字段中显示的"),n("code",[t._v("selected index,")]),t._v("也就是当前选择的项目的序列号，在事件中选择的字符串就像"),n("code",[t._v("action()")]),t._v("的第二个参数的字符串符描述的一样好。")]),t._v(" "),n("p",[t._v("运行这个程序片时，请注意对"),n("code",[t._v("Choice")]),t._v("框大小的判断：在windows里，这个大小是在我们拉下列表时确定的。这意味着如果我们拉下列表，然后增加更多的项目到列表中，这项目将在那，但这个下拉列表不再接受（我们可以通过项目来滚动观察——注释④）。然而，如果我们在第一次拉下下拉列表前将所的项目装入下拉列表，它的大小就会合适。当然，用户在使用时希望看到整个的列表，所以会在下拉列表的状态里对增加项目到选择框里加以特殊的限定。")]),t._v(" "),n("p",[t._v("④：这一行为显然是一种错误，会Java以后的版本里解决。")])])}),[],!1,null,null,null);e.default=a.exports}}]);