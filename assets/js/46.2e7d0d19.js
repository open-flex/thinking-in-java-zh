(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{444:function(v,_,e){"use strict";e.r(_);var o=e(56),t=Object(o.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"_12-6-练习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-6-练习"}},[v._v("#")]),v._v(" 12.6 练习")]),v._v(" "),e("p",[v._v("(1) 创建一个"),e("code",[v._v("myString")]),v._v("类，在其中包含了一个"),e("code",[v._v("String")]),v._v("对象，以便用在构造器中用构造器的参数对其进行初始化。添加一个"),e("code",[v._v("toString()")]),v._v("方法以及一个"),e("code",[v._v("concatenate()")]),v._v("方法，令其将一个"),e("code",[v._v("String")]),v._v("对象追加到我们的内部字符串。在"),e("code",[v._v("myString")]),v._v("中实现"),e("code",[v._v("clone()")]),v._v("。创建两个"),e("code",[v._v("static")]),v._v("方法，每个都取得一个"),e("code",[v._v("myString x")]),v._v("引用作为自己的参数，并调用"),e("code",[v._v('x.concatenate("test")')]),v._v("。但在第二个方法中，请首先调用"),e("code",[v._v("clone()")]),v._v("。测试这两个方法，观察它们不同的结果。")]),v._v(" "),e("p",[v._v("(2) 创建一个名为"),e("code",[v._v("Battery")]),v._v("（电池）的类，在其中包含一个"),e("code",[v._v("int")]),v._v("，用它表示电池的编号（采用独一无二的标识符的形式）。接下来，创建一个名为"),e("code",[v._v("Toy")]),v._v("的类，其中包含了一个"),e("code",[v._v("Battery")]),v._v("数组以及一个"),e("code",[v._v("toString")]),v._v("，用于打印出所有电池。为"),e("code",[v._v("Toy")]),v._v("写一个"),e("code",[v._v("clone()")]),v._v("方法，令其自动关闭所有"),e("code",[v._v("Battery")]),v._v("对象。克隆"),e("code",[v._v("Toy")]),v._v("并打印出结果，完成对它的测试。")]),v._v(" "),e("p",[v._v("(3) 修改"),e("code",[v._v("CheckCloneable.java")]),v._v("，使所有"),e("code",[v._v("clone()")]),v._v("方法都能捕获"),e("code",[v._v("CloneNotSupportException")]),v._v("异常，而不是把它直接传递给调用者。")]),v._v(" "),e("p",[v._v("(4) 修改"),e("code",[v._v("Compete.java")]),v._v("，为"),e("code",[v._v("Thing2")]),v._v("和"),e("code",[v._v("Thing4")]),v._v("类添加更多的成员对象，看看自己是否能判断计时随复杂性变化的规律——是一种简单的线性关系，还是看起来更加复杂。")]),v._v(" "),e("p",[v._v("(5) 从"),e("code",[v._v("Snake.java")]),v._v("开始，创建"),e("code",[v._v("Snake")]),v._v("的一个深层复制版本。")])])}),[],!1,null,null,null);_.default=t.exports}}]);